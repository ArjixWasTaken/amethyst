// Stolen from https://github.com/amber-lang/amber/blob/30ffefb823e94b903b82a0f01f14475ea4e297fe/setup/shared.ab

import { has_failed, env_const_get } from "std/env"
import { array_contains } from "std/array"

import { info, fatal } from "./utils.ab"
import { realpath } from "./path.ab"

pub fun get_os(): Text {
    // Determine OS type
    const os_type = trust $ uname -s $

    if {
        os_type == "Darwin": return "apple-darwin"
        os_type != "Linux": fatal("Unsupported OS type: {os_type}")
    }

    const is_musl = not has_failed("ls -l /lib | grep libc.musl")

    return is_musl
        then "unknown-linux-musl"
        else "unknown-linux-gnu"
}

pub fun get_arch(): Text {
    // Determine architecture
    const arch_type = trust $ uname -m $

    let arch = array_contains(["arm64", "aarch64"], arch_type)
        then "aarch64"
        else "x86_64"

    return arch
}

pub fun get_amethyst_data_dir(): Text {
    const home = trust env_const_get("HOME")
    const path = "{home}/.local/share/amethyst"

    $ mkdir -p "{path}" $ failed {
        fatal("Failed to create {path} directory.")
    }

    return realpath(path)
}
